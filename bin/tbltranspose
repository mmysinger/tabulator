#!/usr/bin/env perl

## Copyright (C) 2009-2014 Stefan Schroedl

use strict;
use warnings;
use Getopt::Std;
use Pod::Usage;

my @matrix;
my $matrix_width  = -1;
my $matrix_height = 0;
my $delim         = '\t';
my %opt           = ();

# guess file delimiter from header line
sub guess_delim
{
    my $line = shift;

    for my $delim ( "", "|", ",", "\t", " " )
    {
        return $delim if ( $line =~ m/$delim/ );
    }
    die "No delimiter found - please specify";
}

sub main
{

    # options
    my $opt_string = 'd:hm';
    Getopt::Std::getopts( $opt_string, \%opt ) or pod2usage(2);
    pod2usage( { -exitval => 0, -verbose => 2 } ) if $opt{'m'};
    pod2usage(1) if $opt{'h'};

    my $filename = '';

    foreach my $arg (@ARGV)
    {
        $filename = $arg unless ( $arg =~ m/^-/ );
    }

    if ( $filename eq '' )
    {
        if ( -t *STDIN )
        {

            # no arguments given
            pod2usage(
                {
                    -exitval => 2,
                    -verbose => 1,
                    -message => 'No argument given'
                }
            );
        }
        $filename = '-';
    }

    open( INFILE, $filename ) or die "Can't open '$filename': $!";

    # read file
    foreach (<INFILE>)
    {
        chomp;
        $delim = guess_delim($_)
          if ( ( !$opt{'d'} ) && $matrix_height == 0 );    # first line
        my @row = split( /$delim/, $_ );
        $matrix_width = scalar(@row) if ( $matrix_width < scalar(@row) );
        push @matrix, \@row;
        $matrix_height++;
    }

    # output
    foreach my $i ( 0 .. ( $matrix_width - 1 ) )
    {
        my @transposed = ();
        foreach my $j ( 0 .. ( $matrix_height - 1 ) )
        {
            my $element =
              ( defined $matrix[$j]->[$i] ? $matrix[$j]->[$i] : 'NA' );
            push @transposed, $element;
        }

        print join( $delim, @transposed ) . "\n";
    }

}

main;

__END__

=head1 NAME

tbltranspose - Transpose the rows and columns of a tabular file

=head1 SYNOPSIS

B<tbltranspose> S<[ B<-dhm> ] file>

=head1 OPTIONS

=over

=item B<-d> <Column delimiter>

Default: try any of '^A', '|', ',', '\t', ' '

=item B<-h>

Show this help message

=item B<-m>

Print manual page

=back

=head1 DESCRIPTION

Transpose the rows and columns of a tabular file.


=head1 AUTHOR

Stefan Schroedl E<lt>stefan.schroedl@gmx.deE<gt>

=head1 COPYRIGHT

Copyright (c) 2009-2014 by Stefan Schroedl

=head1 LICENSE

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

=head1 DISCLAIMER

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

=cut
